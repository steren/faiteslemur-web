"use strict";!function(a){a.module("analytics",["ng"]).service("analytics",["$rootScope","$window","$location",function(a,b,c){var d=function(){b.ga("send","pageview",{page:c.path()})};a.$on("$viewContentLoaded",d)}])}(window.angular),angular.module("config",[]).constant("parseAppID","txwvWhaS610L6jQ6ZAOG31lFQLbqwotzffjS2DUY").constant("parseAPIKey","YslbYOFhF4AhBGuN3FUPF5dgHvXb3NtKjic12GPE"),angular.module("faiteslemurApp",["Parse","analytics","config"]).config(["$routeProvider",function(a){var b=["Place","$route",function(a,b){var c=b.current.params.id;return c?a.find(c):void 0}],c=["Place",function(a){return new a}],d=["Route","$route",function(a,b){var c=b.current.params.id;return c?a.find(c):void 0}],e=["Route","Place","$route",function(a,b,c){var d=c.current.params.place,e=new a;return e.color=[{value:"#ffffff"}],d&&b.find(d).then(function(a){e.place=a}),e}],f=["Climb","$route",function(a,b){var c=b.current.params.id;return c?a.find(c,{include:"route"}):void 0}],g=["Climb","Route","$route",function(a,b,c){var d=c.current.params.route,e=new a;return d&&b.find(d).then(function(a){e.route=a}),e.status="done",e.lead=!0,e}];a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/sign-in",{templateUrl:"views/sign-in.html",controller:"SignInCtrl"}).when("/register",{templateUrl:"views/register.html",controller:"RegisterCtrl"}).when("/place/new",{templateUrl:"views/placeEdit.html",controller:"PlaceCtrl",resolve:{place:c,isNew:function(){return!0}}}).when("/place/:id",{templateUrl:"views/place.html",controller:"PlaceCtrl",resolve:{place:b}}).when("/place/:id/edit",{templateUrl:"views/placeEdit.html",controller:"PlaceCtrl",resolve:{place:b,isNew:function(){return!1}}}).when("/route/new",{templateUrl:"views/routeEdit.html",controller:"RouteCtrl",resolve:{route:e}}).when("/route/:id/edit",{templateUrl:"views/routeEdit.html",controller:"RouteCtrl",resolve:{route:d}}).when("/route/:id",{templateUrl:"views/route.html",controller:"RouteCtrl",resolve:{route:d}}).when("/climb/new",{templateUrl:"views/climb.html",controller:"ClimbCtrl",resolve:{climb:g,isNew:function(){return!0}}}).when("/climb/:id",{templateUrl:"views/climb.html",controller:"ClimbCtrl",resolve:{climb:f,isNew:function(){return!1}}}).when("/user/:userId",{templateUrl:"views/activity.html",controller:"ActivityCtrl"}).otherwise({redirectTo:"/"})}]).config(["ParseProvider","parseAppID","parseAPIKey",function(a,b,c){a.initialize(b,c)}]).run(["Parse","analytics",function(a){return a.auth.resumeSession()}]),angular.module("faiteslemurApp").controller("MainCtrl",["$scope","Place",function(a,b){a.places=b.query()}]),angular.module("faiteslemurApp").factory("Place",["Parse",function(a){var b=function(a,b){function c(){this.constructor=a}for(var d in b)({}).hasOwnProperty.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},c=function(){return c.__super__.constructor.apply(this,arguments)};return b(c,a.Model),c.configure("Place","name","email","web","phone","foursquare","city","address","picture","objectId"),c}]),angular.module("faiteslemurApp").factory("Route",["Parse",function(a){var b=function(a,b){function c(){this.constructor=a}for(var d in b)({}).hasOwnProperty.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},c=function(){return c.__super__.constructor.apply(this,arguments)};return b(c,a.Model),c.configure("Route","name","place","color","grade","type","opener","number","instructions","openedAt","picture","objectId"),c}]),angular.module("faiteslemurApp").factory("Climb",["Parse",function(a){var b=function(a,b){function c(){this.constructor=a}for(var d in b)({}).hasOwnProperty.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},c=function(){return c.__super__.constructor.apply(this,arguments)};return b(c,a.Model),c.configure("Climb","status","objectId","createdAt","lead","note","route","user"),c}]),angular.module("faiteslemurApp").controller("SignInCtrl",["$location","$window","$scope","Parse",function(a,b,c,d){c.auth=d.auth,c.user={},c.errorMessage=null,c.signin=function(b){return b.username&&b.password?(d.auth.login(b.username,b.password).then(function(){return console.log("in",arguments),a.path("/")},function(a){return console.log("out",arguments),c.errorMessage=a.data.error,c.errorMessage}),void 0):(c.errorMessage="Please supply an email and password",c.errorMessage)}}]),angular.module("faiteslemurApp").controller("RegisterCtrl",["$location","$window","$scope","Parse",function(a,b,c,d){c.auth=d.auth,c.user={},c.errorMessage=null,c.register=function(b){return b.password!==b.passwordConfirm?(c.errorMessage="Passwords must match",c.errorMessage):b.username&&b.password?d.auth.register(b.username,b.password).then(function(){return a.path("/")},function(a){return c.errorMessage=a.data.error,c.errorMessage}):(c.errorMessage="Please supply an email and password",c.errorMessage)}}]),angular.module("faiteslemurApp").controller("AuthCtrl",["$scope","Parse",function(a,b){a.auth=b.auth,a.signout=function(){return b.auth.logout()}}]),angular.module("faiteslemurApp").controller("PlaceCtrl",["$scope","place","Route","Climb","$location",function(a,b,c,d,e){a.place=b,a.routes=c.query({where:{place:{__type:"Pointer",className:"Place",objectId:b.objectId}}}),a.quickClimb=function(a){var b=new d;b.status="done",b.lead=!0,c.find(a).then(function(a){b.route=a,b.save().then(function(){console.log("climb saved")})})},a.save=function(){a.place.save().then(function(){console.log("place saved"),e.path("/place/"+b.objectId)},function(a){console.log(a)})}}]),angular.module("faiteslemurApp").controller("RouteCtrl",["$scope","route","$location",function(a,b,c){a.route=b,a.save=function(){a.route.save().then(function(){console.log("route saved"),c.path("/route/"+b.objectId)},function(a){console.log(a)})},a.addColor=function(){return a.route.color.push({value:"#ffffff"}),!1},a.removeColor=function(){return a.route.color.pop(),!1}}]),angular.module("faiteslemurApp").controller("ClimbCtrl",["$scope","$location","climb","isNew",function(a,b,c,d){a.climb=c,a.isNew=d,a.save=function(){a.climb.save().then(function(){console.log("climb saved")},function(a){console.log(a)}),b.path("/place/"+c.route.place.objectId)}}]),angular.module("faiteslemurApp").controller("ActivityCtrl",["$scope","$routeParams","Climb",function(a,b,c){a.climbs=c.query({where:{user:{__type:"Pointer",className:"_User",objectId:b.userId}},include:"route",order:"-createdAt",limit:50})}]);